{"name":"Rvibackend","tagline":"Database and Web Backend for RVI","body":"Copyright (C) 2014, Jaguar Land Rover\r\n\r\nThis document is licensed under Creative Commons\r\nAttribution-ShareAlike 4.0 International.\r\n\r\n\r\nRVI BACKEND (RVI-BE) 0.1\r\n========================\r\n\r\nThis document is an overview of the RVI Backend (RVI-BE) project. RVI-BE is a\r\ndatabase-backed web environment to interact with vehicles\r\n(or any device for that matter) via the RVI middleware framework. For\r\ndetails on RVI consult the documentation in the\r\n[RVI](https://github.com/PDXostc/rvi) respository.\r\n\r\n\r\nDESCRIPTION\r\n-----------\r\n\r\nRVI-BE consists of two components:\r\n\r\n* [Web](https://github.com/PDXostc/rvibackend/tree/master/web)\r\n* [Server](https://github.com/PDXostc/rvibackend/tree/master/server)\r\n\r\n*Web* is a web interface with database backend built using the \r\n[Django](https://www.djangoproject.com) framework.\r\n\r\n*Server* is a daemon process that receives and processes asynchronous\r\nmessages received via RVI from vehicles and other devices.\r\n\r\n\r\nREADER ASSUMPTIONS\r\n------------------\r\n\r\nTo successfully install and utilize RVI-BE you are assumed to:\r\n\r\n1. Know how to use a system running a mainstream Linux distribution such\r\nas Debian, Fedora, OpenSuse, Ubuntu.\r\n\r\n2. Know how to install software packages on your system using your\r\ndistribution's package management system e.g. apt-get, rpm, yum, zypper.\r\n\r\n3. Have a basic understanding of Linux directory structures, how to\r\ncreate new directories, create and edit files.\r\n\r\n\r\nPREREQUISITES\r\n-------------\r\n\r\nVerify if the following prerequisites are met by your system:\r\n\r\n1. To check out the RVI-BE code you will need to have the Git SCM installed on\r\nyour system.\r\n\r\n2. Python v2.7 must be installed on your system. Python v3 or greater may\r\nwork, however we have not yet tested it at this point. Virtually any mainstream\r\nLinux distribution installs Python by default.\r\n\r\n3. RVI-BE requires additional Python packages that may not be installed by\r\ndefault. We use pip to install these packages. You may need to install pip on\r\nyour system:\r\n\r\nFedora:\r\n\r\n    sudo yum install python-pip\r\n\r\nOpenSuse:\r\n\r\n    sudo zypper install python-pip\r\n    \r\nDebian/Ubuntu:\r\n\r\n    sudo apt-get install python-pip    \r\n    \r\n\r\nINSTALLATION AND SETUP\r\n----------------------\r\n\r\nThe following steps explain on how to set up the RVI Backend on your system.\r\n\r\n### Database Installation\r\n\r\nRVI-BE requires a database. Django supports SQLite, MySQL, PostgreSQL and Oracle.\r\nSince the RVI-BE does a lot of writing to the database we recommend that you use\r\na database server rather than SQLite. We use MySQL (or MariaDB) for our testing.\r\n[MariaDB](https://www.mariadb.com) is the community-developed fork of the\r\n[MySQL](http://www.mysql.com) database. It is a drop-in replacement for MySQL.\r\nAll mainstream Linux distributions now include MariaDB in their package\r\nrepositories rather than MySQL. Many distributions install the MariaDB server by\r\ndefault. To check if MariaDB is already installed on your system:\r\n\r\nFedora:\r\n\r\n    yum list installed | grep mariadb\r\n    \r\nOpenSuse:\r\n\r\n    zypper se 'mariadb*'\r\n    \r\nDebian/Ubuntu:\r\n\r\n    dpkg --get-selections | grep mariadb\r\n    \r\nIf the previous does not yield any output on your system you will need to install\r\nthe MariaDB database server:\r\n\r\nFedora:\r\n\r\n    sudo yum install mariadb\r\n\r\nOpenSuse:\r\n\r\n    sudo zypper in mariadb\r\n\r\nDebian/Ubuntu:\r\n\r\n    sudo apt-get install mariadb\r\n    \r\nTo access MySQL databases an API driver is required. There are several options. We\r\nare using [MySQL Connector/Python](http://dev.mysql.com/downloads/connector/python)\r\nwhich is a pure Python driver from Oracle that does not require the MySQL client\r\nlibrary or any other Python modules outside the standard Python libraries. The\r\nmainstream distributions include this driver in their package repositories:\r\n\r\nFedora:\r\n\r\n    sudo yum install mysql-connector-python\r\n    \r\nOpenSuse:\r\n\r\n    sudo zypper in mysql-connector-python\r\n    \r\nDebian/Ubuntu:\r\n\r\n    sudo apt-get install mysql-connector-python\r\n\r\n\r\n### Database Server Startup\r\n\r\nAfter installing the database server you will need to start the MariaDB server\r\nand enable it on system startup.\r\n\r\nFedora/OpenSuse (distributions using systemd):\r\n\r\n    sudo systemctl enable mariadb.service\r\n    sudo systemdtl start mariadb.service\r\n\r\nDebian/Ubuntu (distributions using SysV Init):\r\n\r\n    sudo update-rc.d mysql defaults\r\n    \r\n*Note:* The command above for Debian/Ubuntu uses 'mysql' although the it is the\r\nMariaDB Server that will be started.\r\n\r\n\r\n### Database Server Setup\r\n\r\nNext we need to prepare the database server. For the following steps when we use\r\nthe notation *shell>* it means that you will have to enter the command in a Linux\r\nshell. When we use the notation *mysql>* then the command has to be issued from\r\nthe MySQL shell typically as *root* user.\r\n\r\n*Note:* SQL syntax requires that every command is terminated with a semicolon.\r\n\r\n1. Load Timezone Definitions\r\n\r\n        shell> mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql -u root mysql\r\n   \r\n1. Set Root Password\r\n\r\n        shell> mysql -u root\r\n        mysql> select user, host, password from mysql.user;\r\n        mysql> update mysql.user set password = PASSWORD('newpwd') where user = 'root';\r\n        mysql> flush privileges;\r\n   \r\n2. Remove anonymous accounts\r\n\r\n        mysql> drop user ''@'localhost';\r\n        mysql> drop user ''@'hostname';\r\n\r\n3. Drop test database\r\n\r\n        mysql> drop database test;  \r\n   \r\n4. Create RVI Database\r\n\r\n        mysql> create database rvi character set utf8;\r\n   \r\n6. Create User for RVI\r\n\r\n        mysql> create user 'rvi_user'@'localhost' identified by 'rvi';\r\n        \r\n    These are the default user name and password. If you change them you will\r\n    also have to change them in the *mysql.cnf* file (see section on RVI\r\n    Backend Installation).\r\n   \r\n8. Grant User All Rights to Database\r\n\r\n        mysql> grant all on rvi.* to 'rvi_user'@'localhost';\r\n\r\n\r\n### Django Installation\r\n\r\nTo install Django you need to have *pip* installed on your system as explained\r\nearlier. We are using Django version 1.7.\r\n\r\n    sudo pip install django==1.7\r\n\r\nVerify installation with:\r\n\r\n    python -c \"import django; print(django.get_version())\"\r\n    \r\nwhich should print *1.7* to the console.\r\n\r\n\r\n### RVI Backend Installation\r\n\r\n1. Clone the RVI Backend Repository from GitHub\r\n\r\n        git clone https://github.com/PDXostc/rvibackend.git rvibackend\r\n    \r\n2. Change into the *rvibackend/web* Directory\r\n\r\n        cd rvibackend/web\r\n    \r\n3. Create the Tables for the RVI Backend Database\r\n\r\n        python manage.py migrate\r\n\r\n    This will access the MariaDB database server. If you set the database up according\r\n    to the above instructions this will work right out of the box. If you did change\r\n    user name and/or password when setting up the database then you will need to modify\r\n    the file *rvibackend/mysql.cnf* accordingly.\r\n\r\n4. Create the Admin User for the RVI Backend\r\n\r\n        python manage.py createsuperuser\r\n        \r\n5. Start the Development Server\r\n\r\n    For development purposes and to test the RVI Backend it is easiest to use\r\n    the built-in web server. Executing\r\n    \r\n        python manage.py runserver\r\n        \r\n    will start the development server listening on *localhost:8000*. The\r\n    development server will perform a couple of system checks, read the settings\r\n    file and then listen to incoming HTTP requests:\r\n    \r\n        Performing system checks...\r\n\r\n        System check identified no issues (0 silenced).\r\n        November 07, 2014 - 02:17:21\r\n        Django version 1.7, using settings 'rvi.settings'\r\n        Starting development server at http://127.0.0.1:8000/\r\n        Quit the server with CONTROL-C.\r\n        \r\n    You can now use your web browser and point it to *http://localhost:8000/admin*\r\n    to see the login prompt for the RVI Backend administrative user interface.\r\n    \r\n    \r\n### Start the RVI Backend Server Daemon\r\n\r\nBefore you can start the RVI Backend Server Daemon you will need to have the RVI\r\nMiddleware Server running on your system. Please consult the instructions at\r\n[RVI](https://github.com/PDXostc/rvi) on how to setup and start the server.\r\n\r\nThe RVI Backend Server Daemon connects to the RVI Middleware Server on the\r\nservice edge at *localhost:8801*. If you configured your RVI Middleware Server\r\nto listen to a different host/port you will have to change the setting\r\n\r\n    RVI_SERVICE_EDGE_URL = 'http://127.0.0.1:8801'\r\n    \r\nin the file *web/rvi/settings.py*. This file is the common configuration file for\r\nthe RVI Backend. After that you can start the RVI Backend Server Daemon in\r\nconsole or foreground mode with\r\n\r\n    python rviserver.py foreground\r\n    \r\nIf everything is configured correctly you will see\r\n\r\n    INFO RVI Server: Starting...\r\n    INFO RVI Server: Configuration: RVI_SERVICE_EDGE_URL: http://127.0.0.1:8801, RVI_SOTA_CALLBACK_URL: http://127.0.0.1:20001, RVI_SOTA_SERVICE_ID: /sota, RVI_SOTA_CHUNK_SIZE: 65536, MEDIA_ROOT: ../web/../files/\r\n    INFO RVI Server: Starting SOTA Callback Server on http://127.0.0.1:20001 with service id /sota.\r\n    INFO RVI Server: SOTA Callback Server started.\r\n    INFO RVI Server: Setting up outbound connection to RVI Service Edge at http://127.0.0.1:8801\r\n    INFO RVI Server: Initiate download service name: jlr.com/backend/sota/initiate_download\r\n    INFO RVI Server: Cancel download service name: jlr.com/backend/sota/cancel_download\r\n    INFO RVI Server: Download complete service name: jlr.com/backend/sota/download_complete\r\n    INFO RVI Server: Starting SOTA Transmission Server.\r\n    INFO RVI Server: SOTA Transmission Server started.\r\n    \r\nEvery 10 seconds the RVI Backend Server will issue a heartbeat message:\r\n\r\n    DEBUG RVI Server: Heartbeat.\r\n\r\n\r\nYour RVI Backend is now ready for use.\r\n\r\n\r\nUSING THE RVI BACKEND\r\n---------------------\r\n\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}